// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                Int         @id @default(autoincrement())
  sku               String?     @unique
  name              String?
  description       String?
  unitPrice        Decimal?    @db.Money @map("unit_price")
  imageUrl         String?  @map("image_url")
  active            Int         @db.SmallInt
  unitsInStock    Int? @map("units_in_stock")
  dateCreated      DateTime    @default(now()) @map("date_created")
  lastUpdated      DateTime    @updatedAt @map("last_updated")
  categoryId       Int  @map("category_id")
  category_relation Category    @relation(fields: [categoryId], references: [id])
  orderItems        OrderItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Country {
  id     Int     @id @default(autoincrement())
  code   String  @unique @db.VarChar(2)
  name   String  @unique @db.VarChar(50)
  states State[]
}

model State {
  id               Int     @id @default(autoincrement())
  name             String  @unique @db.VarChar(100)
  countryId       Int @map("country_id")
  country_relation Country @relation(fields: [countryId], references: [id])
}

model Customer {
  id         Int      @id @default(autoincrement())
  firstName String?   @db.VarChar(255) @map("first_name")
  lastName  String?   @db.VarChar(255) @map("last_name")
  email      String?   @db.VarChar(255)
  orders     Orders[]
}

model Orders {
  id                    Int         @id @default(autoincrement())
  orderTrackingNumber String?      @db.VarChar(255) @map("order_tracking_number")
  totalPrice           Decimal?     @db.Money @map("total_price")
  totalQuantity        Int? @map("total_quantity")
  billingAddressId    Int? @map("billing_address_id")
  customerId           Int? @map("customer_id")
  shippingAddressId   Int? @map("shipping_address_id")
  status                String?      @db.VarChar()
  dateCreated          DateTime?    @default(now()) @map("date_created")
  lastUpdated          DateTime?    @updatedAt @map("data_updated")
  customer_relation     Customer?    @relation(fields: [customerId], references: [id])
  shipping_relation     Address?     @relation(name: "BillingAddresses", fields: [shippingAddressId], references: [id])
  billing_relation      Address?     @relation(name: "ShipppingAddresses", fields: [billingAddressId], references: [id])
  orderItems            OrderItem[]
}

model Address {
  id                 Int      @id @default(autoincrement())
  city               String?   @db.VarChar(255)
  country            String?   @db.VarChar(255)
  state              String?   @db.VarChar(255)
  street             String?   @db.VarChar(255)
  zipCode           String?   @db.VarChar(255) @map("zip_code")
  billingAddresses   Orders[] @relation("BillingAddresses")
  shipppingAddresses Orders[] @relation("ShipppingAddresses")
}

model OrderItem {
  id               Int     @id @default(autoincrement())
  imageUrl        String?  @db.VarChar(255) @map("image_url")
  quantity         Int?
  unitPrice       Decimal? @db.Money @map("unit_price")
  orderId         Int? @map("order_id")
  productId       Int? @map("product_id")
  order_relation   Orders?  @relation(fields: [orderId], references: [id])
  product_relation Product? @relation(fields: [productId], references: [id])
}
